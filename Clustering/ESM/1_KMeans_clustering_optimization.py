import pickle
import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

#Load representations from pickle - keys are accession and values are representations as numpy arrays
representations_dict = pickle.load(open("ESM/encapsulin_embeddings.pkl", 'rb'))

#Load dict into a dataframe for convenience
embedded_dataframe = pd.DataFrame.from_dict(representations_dict, orient="index")

#Choose features
protein_vectors = embedded_dataframe.iloc[:, 1:-1]

# # NOTE: This code below was run on a remote server
# # Commented out here because it takes forever to run

# #Fit KMeans for various k values and plot sum of squares error against number of clusters
# k_values = [100, 250, 500, 750, 1000, 1500, 2000, 3000, 4000, 6000]
# sse = {}

# for k in k_values:
#     print("Running KMeans clustering with {} clusters".format(k))
#     kmeans = KMeans(n_clusters=k).fit(protein_vectors)
#     sse[k] = kmeans.inertia_


# #Write results to file for plotting or analysis
# print("Clustering done! Writing results to file...")

# strings = [f'{key} : {sse[key]}' for key in sse]
# with open('elbow.txt', 'w') as f:
#     [f.write(f'{string}\n') for string in strings]

#This is the code for the elbow plot
#The data comes from a text file generated by the code above
sse = {}

with open("Clustering Analysis/ESM/elbowplot.txt") as f:
    for line in f:
        values = line.rstrip().split(":")

        sse[int(values[0])] = float(values[1])

plt.plot(sse.keys(), sse.values())
plt.xlabel("Number of Clusters")
plt.ylabel("Sum of Squares Error")
plt.show()